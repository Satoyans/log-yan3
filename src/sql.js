"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.queryAsync = exports.query = void 0;
const event_1 = require("bdsx/event");
const mysql = require("mysql");
const dotenv_1 = require("dotenv");
const path = require("path");
const ENV_PATH = path.join(__dirname, '.env');
(0, dotenv_1.config)({ path: ENV_PATH });
const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: process.env.SQL_PASSWORD,
    database: process.env.SQL_DATABASE
});
function query(queryText, func) {
    try {
        //deleteOldLog();
        connection.query(queryText, func);
    }
    catch (e) {
        console.error(e);
    }
    ;
}
exports.query = query;
function queryAsync(queryText) {
    return new Promise((resolve, reject) => {
        try {
            connection.query(queryText, (err, result, field) => {
                if (err == null) {
                    resolve(result);
                }
                else {
                    reject(err);
                }
            });
        }
        catch (e) {
            console.error(e);
        }
        ;
    });
}
exports.queryAsync = queryAsync;
var lastDelTime = new Date().getTime();
const time_to_delete = 3 * 30 * 24 * 60 * 60 * 1000; //3 month
const deleteOldLog = () => {
    if ((new Date().getTime() - lastDelTime) < 15 * 60 * 1000)
        return;
    let timeobj = new Date(new Date().getTime() - time_to_delete);
    let timestr = `${timeobj.getFullYear()}-${('0' + (Number(timeobj.getMonth()) + 1)).slice(-2)}-${('0' + timeobj.getDate()).slice(-2)} ${('0' + timeobj.getHours()).slice(-2)}:${('0' + timeobj.getMinutes()).slice(-2)}:${('0' + timeobj.getSeconds()).slice(-2)}`;
    console.log("[Log-Yan]ログの削除を実行します。");
    console.log("～" + timestr + "(" + (new Date().getTime() - lastDelTime) / 1000 / 60 + ")分");
    lastDelTime = new Date().getTime();
    for (let table of ["blockcontainer", "blockdestroy", "blockinteractedwith", "blockplace", "entitydie", "itemthrow", "playerattack"]) {
        //not delete table (getElytra/lightningHitBlock)
        connection.query("DELETE FROM `logyan`.`" + table + "` WHERE `time` < '" + timestr + "';");
    }
};
event_1.events.serverClose.on(() => {
    connection.destroy();
});
(function handleDisconnect() {
    connection.connect((err) => {
        if (err) {
            console.log('ERROR.CONNECTION_DB: ', err);
            setTimeout(() => { handleDisconnect; }, 1000);
        }
    });
    //error('PROTOCOL_CONNECTION_LOST')時に再接続
    connection.on('error', (err) => {
        console.log('ERROR.DB: ', err);
        if (err.code === 'PROTOCOL_CONNECTION_LOST') {
            console.log('ERROR.CONNECTION_LOST'.yellow);
            handleDisconnect();
        }
        else {
            throw err;
        }
    });
})();
event_1.events.serverClose.on(() => {
    connection.destroy();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3FsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic3FsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHNDQUFvQztBQUNwQywrQkFBK0I7QUFDL0IsbUNBQThCO0FBQzlCLDZCQUE2QjtBQUM3QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM5QyxJQUFBLGVBQU0sRUFBQyxFQUFDLElBQUksRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDO0FBQ3hCLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztJQUN0QyxJQUFJLEVBQUUsV0FBVztJQUNqQixJQUFJLEVBQUUsTUFBTTtJQUNaLFFBQVEsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVk7SUFDbEMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWTtDQUNyQyxDQUFDLENBQUM7QUFFSCxTQUFTLEtBQUssQ0FBQyxTQUFpQixFQUFFLElBQVU7SUFDeEMsSUFBSTtRQUNBLGlCQUFpQjtRQUNqQixVQUFVLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUNyQztJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQTtLQUFFO0lBQUEsQ0FBQztBQUNyQyxDQUFDO0FBNERHLHNCQUFLO0FBM0RULFNBQVMsVUFBVSxDQUFDLFNBQWlCO0lBQ2pDLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDbkMsSUFBSTtZQUNBLFVBQVUsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsR0FBNEIsRUFBRSxNQUFXLEVBQUUsS0FBb0MsRUFBRSxFQUFFO2dCQUM1RyxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7b0JBQ2IsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUNuQjtxQkFBTTtvQkFDSCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ2Y7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQUU7UUFBQSxDQUFDO0lBQ3JDLENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQztBQWdERyxnQ0FBVTtBQTlDZCxJQUFJLFdBQVcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3ZDLE1BQU0sY0FBYyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFBLENBQUEsU0FBUztBQUM1RCxNQUFNLFlBQVksR0FBRyxHQUFHLEVBQUU7SUFDdEIsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJO1FBQUUsT0FBTztJQUNsRSxJQUFJLE9BQU8sR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0lBQzlELElBQUksT0FBTyxHQUFHLEdBQUcsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNsUSxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsV0FBVyxDQUFDLEdBQUcsSUFBSSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQTtJQUMxRixXQUFXLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNuQyxLQUFLLElBQUksS0FBSyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLGNBQWMsQ0FBQyxFQUFFO1FBQ2pJLGdEQUFnRDtRQUNoRCxVQUFVLENBQUMsS0FBSyxDQUFDLHdCQUF3QixHQUFHLEtBQUssR0FBRyxvQkFBb0IsR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUM7S0FDOUY7QUFDTCxDQUFDLENBQUE7QUFFRCxjQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDdkIsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3pCLENBQUMsQ0FBQyxDQUFDO0FBRUgsQ0FBQyxTQUFTLGdCQUFnQjtJQUN0QixVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7UUFDNUIsSUFBSSxHQUFHLEVBQUU7WUFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNoRDtJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsd0NBQXdDO0lBQ3hDLFVBQVUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBc0IsRUFBRSxFQUFFO1FBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQy9CLElBQUksR0FBRyxDQUFDLElBQUksS0FBSywwQkFBMEIsRUFBRTtZQUN6QyxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzVDLGdCQUFnQixFQUFFLENBQUM7U0FDdEI7YUFBTTtZQUNILE1BQU0sR0FBRyxDQUFDO1NBQ2I7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFFTCxjQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDdkIsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3pCLENBQUMsQ0FBQyxDQUFDIn0=